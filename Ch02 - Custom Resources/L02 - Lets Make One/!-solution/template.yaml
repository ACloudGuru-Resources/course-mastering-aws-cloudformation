Transform: AWS::Serverless-2016-10-31

Parameters:
  DomainParameter:
    Description: apex domain
    Type: String

Resources:
  ProxyEntryLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs12.x
      CodeUri: src
      Handler: index.handler
      Role: !GetAtt ProxyEntryRole.Arn
      Environment:
        Variables:
          ORIGINMAP_TABLE: !Ref OriginMapTBL
          DOMAIN: !Ref DomainParameter

  ProxyEntryRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName: stack-proxy-proxyentry-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: stack-proxy-proxyentry-role
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                  - dynamodb:*
                Resource:
                  - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/stack-proxy-*
                  - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/stack-proxy-*/index/*

  OriginMapTBL:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: stack-proxy-domainmap
      AttributeDefinitions:
        - AttributeName: Host
          AttributeType: S
      KeySchema:
        - AttributeName: Host
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 10
        WriteCapacityUnits: 5

Outputs:
  ProxyEntryLambdaARN:
    Description: ProxyEntry Lambda ARN
    Value: !GetAtt ProxyEntryLambdaFunction.Arn
    Export:
      Name: stack-proxy-proxyentry-lambda-arn

AWSTemplateFormatVersion: "2010-09-09"
Description: "Marketing Stack Proxy (*.dev.klickstack.com)"
Resources:
  CfproxyentryLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: /aws/lambda/stack-proxy-prod-cfproxyentry
  OriginrequestproxyLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: /aws/lambda/stack-proxy-prod-originrequestproxy
  OriginrequestLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: /aws/lambda/stack-proxy-prod-originrequest
  OriginresponseLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: /aws/lambda/stack-proxy-prod-originresponse
  GithubwebhookLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: /aws/lambda/stack-proxy-prod-githubwebhook
  CfproxyentryLambdaFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket: com.klick.812730701436.us-east-1.prod.sls.deploys
        S3Key: "serverless/stack-proxy/prod/1562618729439-2019-07-08T20:45:29.439Z/cfproxyentry.zip"
      FunctionName: stack-proxy-prod-cfproxyentry
      Handler: functions/cfproxyentry/index.handler
      MemorySize: 128
      Role:
        "Fn::GetAtt":
          - CFProxyEntryRole
          - Arn
      Runtime: nodejs8.10
      Timeout: 6
      Environment:
        Variables:
          ORIGINMAP_TABLE:
            Ref: OriginMapTBL
          DOMAIN: dev.klickstack.com
    DependsOn:
      - CfproxyentryLogGroup
      - CFProxyEntryRole
  CfproxyentryLambdaVersionjcHulshQJP1rEgZKIolt55ZAmdBq0wH693EM2EwmFQg:
    Type: "AWS::Lambda::Version"
    DeletionPolicy: Retain
    Properties:
      FunctionName:
        Ref: CfproxyentryLambdaFunction
      CodeSha256: IhyNTvuTiM057HSItaPEThPVdpfRJy7Auw1Hw05oT/s=
  OriginrequestproxyLambdaFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket: com.klick.812730701436.us-east-1.prod.sls.deploys
        S3Key: "serverless/stack-proxy/prod/1562618729439-2019-07-08T20:45:29.439Z/originrequestproxy.zip"
      FunctionName: stack-proxy-prod-originrequestproxy
      Handler: functions/originrequest-proxy/index.handler
      MemorySize: 512
      Role:
        "Fn::GetAtt":
          - OriginRequestProxyRole
          - Arn
      Runtime: nodejs8.10
      Timeout: 5
    DependsOn:
      - OriginrequestproxyLogGroup
      - OriginRequestProxyRole
  OriginrequestproxyLambdaVersionJq6j21jiX73JeIv1dbWGCthq7jJbkrUHDnZNGgPeRs:
    Type: "AWS::Lambda::Version"
    DeletionPolicy: Retain
    Properties:
      FunctionName:
        Ref: OriginrequestproxyLambdaFunction
      CodeSha256: gPGnpuvkrP3K/ueARguJCotzWXjPEB34Qgg+87EDmvI=
  OriginrequestLambdaFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket: com.klick.812730701436.us-east-1.prod.sls.deploys
        S3Key: "serverless/stack-proxy/prod/1562618729439-2019-07-08T20:45:29.439Z/originrequest.zip"
      FunctionName: stack-proxy-prod-originrequest
      Handler: functions/originrequest/index.handler
      MemorySize: 512
      Role:
        "Fn::GetAtt":
          - OriginRequestRole
          - Arn
      Runtime: nodejs8.10
      Timeout: 5
    DependsOn:
      - OriginrequestLogGroup
      - OriginRequestRole
  OriginrequestLambdaVersionlMi2ndzQrQw9kQcAyBj0pEjpgwrzOo7hyGg6bw20rg:
    Type: "AWS::Lambda::Version"
    DeletionPolicy: Retain
    Properties:
      FunctionName:
        Ref: OriginrequestLambdaFunction
      CodeSha256: nOLc6bEvTH1LGuqqSmGDMA/X+4FDa7Y3oJY5ABn2gAE=
  OriginresponseLambdaFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket: com.klick.812730701436.us-east-1.prod.sls.deploys
        S3Key: "serverless/stack-proxy/prod/1562618729439-2019-07-08T20:45:29.439Z/originresponse.zip"
      FunctionName: stack-proxy-prod-originresponse
      Handler: functions/originresponse/index.handler
      MemorySize: 128
      Role:
        "Fn::GetAtt":
          - OriginResponseRole
          - Arn
      Runtime: nodejs8.10
      Timeout: 5
    DependsOn:
      - OriginresponseLogGroup
      - OriginResponseRole
  OriginresponseLambdaVersionlePMA92Qdw4fFE2Y72uIRweOkLz6SO04f16O0vnm14o:
    Type: "AWS::Lambda::Version"
    DeletionPolicy: Retain
    Properties:
      FunctionName:
        Ref: OriginresponseLambdaFunction
      CodeSha256: BMw/NGbT9xmxE6pJ1d9EdxJRYxZDn5AP5qyEtloc+lc=
  GithubwebhookLambdaFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket: com.klick.812730701436.us-east-1.prod.sls.deploys
        S3Key: "serverless/stack-proxy/prod/1562618729439-2019-07-08T20:45:29.439Z/githubwebhook.zip"
      FunctionName: stack-proxy-prod-githubwebhook
      Handler: functions/githubwebhook/index.handler
      MemorySize: 256
      Role:
        "Fn::GetAtt":
          - GithubWebhookRole
          - Arn
      Runtime: nodejs8.10
      Timeout: 10
      Environment:
        Variables:
          GITHUB_API: "https://api.github.com/graphql"
          GITHUB_WEBHOOK_SECRET: CwrzCiyFD23y3A2t
          GITHUB_ACCESS_TOKEN: 316d14af46c9d56822f2ded7b7007741a2a14f2d
          PROD_CI_ROLE_ARN:
            "Fn::GetAtt":
              - DeployerRole
              - Arn
          PROD_DEPLOYMENT_BUCKET: com.klick.812730701436.us-east-1.prod.sls.deploys
    DependsOn:
      - GithubwebhookLogGroup
      - GithubWebhookRole
  GithubwebhookLambdaVersionYZ7Rj0aBSWjrOxsf2dXVh4L5Z8vkOhHgRHZ98wkX9U:
    Type: "AWS::Lambda::Version"
    DeletionPolicy: Retain
    Properties:
      FunctionName:
        Ref: GithubwebhookLambdaFunction
      CodeSha256: lStUUHoQB/FHqZ4zkb8SE99iX/w4v4vlEiebsVkj7b4=
  ApiGatewayRestApi:
    Type: "AWS::ApiGateway::RestApi"
    Properties:
      Name: prod-stack-proxy
      EndpointConfiguration:
        Types:
          - EDGE
  ApiGatewayResourceGithub:
    Type: "AWS::ApiGateway::Resource"
    Properties:
      ParentId:
        "Fn::GetAtt":
          - ApiGatewayRestApi
          - RootResourceId
      PathPart: github
      RestApiId:
        Ref: ApiGatewayRestApi
  ApiGatewayResourceGithubDeletebranch:
    Type: "AWS::ApiGateway::Resource"
    Properties:
      ParentId:
        Ref: ApiGatewayResourceGithub
      PathPart: deletebranch
      RestApiId:
        Ref: ApiGatewayRestApi
  ApiGatewayMethodGithubDeletebranchOptions:
    Type: "AWS::ApiGateway::Method"
    Properties:
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      MethodResponses:
        - StatusCode: "200"
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Credentials: true
          ResponseModels: {}
      RequestParameters: {}
      Integration:
        Type: MOCK
        RequestTemplates:
          application/json: "{statusCode:200}"
        ContentHandling: CONVERT_TO_TEXT
        IntegrationResponses:
          - StatusCode: "200"
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,POST'"
              method.response.header.Access-Control-Allow-Credentials: "'false'"
            ResponseTemplates:
              application/json: >-
                #set($origin = $input.params("Origin"))

                #if($origin == "") #set($origin = $input.params("origin")) #end

                #if($origin.matches(".*"))
                #set($context.responseOverride.header.Access-Control-Allow-Origin
                = $origin) #end
      ResourceId:
        Ref: ApiGatewayResourceGithubDeletebranch
      RestApiId:
        Ref: ApiGatewayRestApi
  ApiGatewayMethodGithubDeletebranchPost:
    Type: "AWS::ApiGateway::Method"
    Properties:
      HttpMethod: POST
      RequestParameters: {}
      ResourceId:
        Ref: ApiGatewayResourceGithubDeletebranch
      RestApiId:
        Ref: ApiGatewayRestApi
      ApiKeyRequired: false
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          "Fn::Join":
            - ""
            - - "arn:"
              - Ref: "AWS::Partition"
              - ":apigateway:"
              - Ref: "AWS::Region"
              - ":lambda:path/2015-03-31/functions/"
              - "Fn::GetAtt":
                  - GithubwebhookLambdaFunction
                  - Arn
              - /invocations
      MethodResponses: []
  ApiGatewayDeployment1562618671723:
    Type: "AWS::ApiGateway::Deployment"
    Properties:
      RestApiId:
        Ref: ApiGatewayRestApi
      StageName: prod
    DependsOn:
      - ApiGatewayMethodGithubDeletebranchOptions
      - ApiGatewayMethodGithubDeletebranchPost
  GithubwebhookLambdaPermissionApiGateway:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName:
        "Fn::GetAtt":
          - GithubwebhookLambdaFunction
          - Arn
      Action: "lambda:InvokeFunction"
      Principal: apigateway.amazonaws.com
      SourceArn:
        "Fn::Join":
          - ""
          - - "arn:"
            - Ref: "AWS::Partition"
            - ":execute-api:"
            - Ref: "AWS::Region"
            - ":"
            - Ref: "AWS::AccountId"
            - ":"
            - Ref: ApiGatewayRestApi
            - "/*/*"
  SSLCert:
    Type: "AWS::CertificateManager::Certificate"
    Properties:
      DomainName: "*.dev.klickstack.com"
  OriginMapTBL:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: stack-proxy-prod-domainmap
      AttributeDefinitions:
        - AttributeName: Host
          AttributeType: S
      KeySchema:
        - AttributeName: Host
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 300
        WriteCapacityUnits: 5
  OriginRequestProxyRole:
    Type: "AWS::IAM::Role"
    Properties:
      Path: /
      RoleName: stack-proxy-prod-originrequestproxy-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - edgelambda.amazonaws.com
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: stack-proxy-prod-originrequestproxy-role
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "logs:DescribeLogStreams"
                Resource: "arn:aws:logs:*:*:*"
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:ListBucket"
                Resource:
                  - "Fn::Join":
                      - ""
                      - - "arn:aws:s3:::"
                        - Ref: DefaultBucket
                  - "Fn::Join":
                      - ""
                      - - "arn:aws:s3:::"
                        - Ref: DefaultBucket
                        - "/*"
                  - "arn:aws:s3:::*"
              - Effect: Allow
                Action:
                  - "dynamodb:GetItem"
                  - "dynamodb:Query"
                  - "dynamodb:DescribeStream"
                  - "dynamodb:GetRecords"
                  - "dynamodb:GetShardIterator"
                  - "dynamodb:ListStreams"
                Resource:
                  - "Fn::Join":
                      - ""
                      - - "arn:aws:dynamodb:"
                        - Ref: "AWS::Region"
                        - ":"
                        - Ref: "AWS::AccountId"
                        - ":table/"
                        - "stack-proxy-prod-*"
                  - "Fn::Join":
                      - ""
                      - - "arn:aws:dynamodb:"
                        - Ref: "AWS::Region"
                        - ":"
                        - Ref: "AWS::AccountId"
                        - ":table/"
                        - "stack-proxy-prod-*"
                        - "/index/*"
  OriginRequestRole:
    Type: "AWS::IAM::Role"
    Properties:
      Path: /
      RoleName: stack-proxy-prod-originrequest-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - edgelambda.amazonaws.com
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: stack-proxy-prod-originrequest-role
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "logs:DescribeLogStreams"
                Resource: "arn:aws:logs:*:*:*"
  OriginResponseRole:
    Type: "AWS::IAM::Role"
    Properties:
      Path: /
      RoleName: stack-proxy-prod-originresponse-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - edgelambda.amazonaws.com
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: stack-proxy-prod-originresponse-role
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "logs:DescribeLogStreams"
                Resource: "arn:aws:logs:*:*:*"
  GithubWebhookRole:
    Type: "AWS::IAM::Role"
    Properties:
      Path: /
      RoleName: stack-proxy-prod-githubwebhookrole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: stack-proxy-prod-githubwebhookrole
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "arn:aws:logs:*:*:*"
              - Effect: Allow
                Action:
                  - "cloudformation:DeleteStack"
                Resource:
                  - "arn:aws:cloudformation:*:*:stack/*-rc-*/*"
                  - "arn:aws:cloudformation:*:*:stack/*-feat-*/*"
              - Effect: Allow
                Action:
                  - "cloudformation:DescribeStacks"
                  - "cloudformation:DescribeAccountLimits"
                  - "cloudformation:DescribeChangeSet"
                  - "cloudformation:DescribeStackEvents"
                  - "cloudformation:DescribeStackInstance"
                  - "cloudformation:DescribeStackResource"
                  - "cloudformation:DescribeStackResources"
                  - "cloudformation:DescribeStackSet"
                  - "cloudformation:DescribeStackSetOperation"
                  - "cloudformation:EstimateTemplateCost"
                  - "cloudformation:GetStackPolicy"
                  - "cloudformation:GetTemplate"
                  - "cloudformation:GetTemplateSummary"
                  - "iam:PassRole"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:ListBucket"
                  - "s3:DeleteObject"
                Resource:
                  - "arn:aws:s3:::*-rc-*"
                  - "arn:aws:s3:::*-feat-*"
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:ListBucket"
                  - "s3:DeleteObject"
                Resource:
                  - "arn:aws:s3:::com.klick.812730701436.us-east-1.prod.sls.deploys"
                  - "arn:aws:s3:::com.klick.812730701436.us-east-1.prod.sls.deploys/*"
              - Effect: Allow
                Action:
                  - "sts:AssumeRole"
  CFProxyEntryRole:
    Type: "AWS::IAM::Role"
    Properties:
      Path: /
      RoleName: stack-proxy-prod-cfproxyentry-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
              AWS: "arn:aws:iam::104477223281:root"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: stack-proxy-prod-cfproxyentry-role
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "arn:aws:logs:*:*:*"
              - Effect: Allow
                Action:
                  - "iam:PassRole"
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - "dynamodb:*"
                Resource:
                  - "Fn::Join":
                      - ""
                      - - "arn:aws:dynamodb:"
                        - Ref: "AWS::Region"
                        - ":"
                        - Ref: "AWS::AccountId"
                        - ":table/"
                        - "stack-proxy-prod-*"
                  - "Fn::Join":
                      - ""
                      - - "arn:aws:dynamodb:"
                        - Ref: "AWS::Region"
                        - ":"
                        - Ref: "AWS::AccountId"
                        - ":table/"
                        - "stack-proxy-prod-*"
                        - "/index/*"
  DeployerRole:
    Type: "AWS::IAM::Role"
    Properties:
      Path: /
      RoleName: stack-proxy-prod-deployer-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: stack-proxy-prod-deployer-role
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "*"
                Resource: "*"
  CrossAccountPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName:
        Ref: CfproxyentryLambdaFunction
      Principal: "arn:aws:iam::104477223281:root"
  CloudfrontOAI:
    Type: "AWS::CloudFront::CloudFrontOriginAccessIdentity"
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: Created for stack-proxy-prod
  DefaultBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
  BucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket:
        Ref: DefaultBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            AWS:
              - "Fn::GetAtt":
                  - OriginRequestRole
                  - Arn
            CanonicalUser:
              - "Fn::GetAtt":
                  - CloudfrontOAI
                  - S3CanonicalUserId
          Action:
            - "s3:ListBucket"
            - "s3:GetObject"
          Resource:
            - "Fn::Join":
                - ""
                - - "arn:aws:s3:::"
                  - Ref: DefaultBucket
            - "Fn::Join":
                - ""
                - - "arn:aws:s3:::"
                  - Ref: DefaultBucket
                  - "/*"
  CDN:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Aliases:
          - "*.dev.klickstack.com"
        ViewerCertificate:
          AcmCertificateArn:
            Ref: SSLCert
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2018
        WebACLId:
          "Fn::ImportValue": sandbox-wafacl-prod
        Enabled: true
        HttpVersion: http2
        PriceClass: PriceClass_100
        IPV6Enabled: true
        DefaultCacheBehavior:
          AllowedMethods:
            - DELETE
            - GET
            - HEAD
            - OPTIONS
            - PATCH
            - POST
            - PUT
          CachedMethods:
            - GET
            - HEAD
          Compress: true
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none
            Headers:
              - Host
              - CloudFront-Viewer-Country
              - Accept-Language
          DefaultTTL: 0
          MaxTTL: 0
          MinTTL: 0
          TargetOriginId: WebsiteBucketOrigin
          ViewerProtocolPolicy: redirect-to-https
          LambdaFunctionAssociations:
            - EventType: origin-request
              LambdaFunctionARN:
                Ref: OriginrequestproxyLambdaVersionJq6j21jiX73JeIv1dbWGCthq7jJbkrUHDnZNGgPeRs
            - EventType: origin-response
              LambdaFunctionARN:
                Ref: OriginresponseLambdaVersionlePMA92Qdw4fFE2Y72uIRweOkLz6SO04f16O0vnm14o
        Origins:
          - DomainName:
              "Fn::GetAtt":
                - DefaultBucket
                - DomainName
            Id: WebsiteBucketOrigin
            S3OriginConfig:
              OriginAccessIdentity:
                "Fn::Join":
                  - ""
                  - - origin-access-identity/cloudfront/
                    - Ref: CloudfrontOAI
  DnsRecords:
    Type: "AWS::Route53::RecordSetGroup"
    Properties:
      HostedZoneName: klickstack.com.
      Comment: DNS records associated with stack-proxy-prod
      RecordSets:
        - Name: "*.dev.klickstack.com."
          Type: A
          AliasTarget:
            DNSName:
              "Fn::GetAtt":
                - CDN
                - DomainName
            HostedZoneId: Z2FDTNDATAQYW2
Outputs:
  ServerlessDeploymentBucketName:
    Value: com.klick.812730701436.us-east-1.prod.sls.deploys
  CfproxyentryLambdaFunctionQualifiedArn:
    Description: Current Lambda function version
    Value:
      Ref: CfproxyentryLambdaVersionjcHulshQJP1rEgZKIolt55ZAmdBq0wH693EM2EwmFQg
  OriginrequestproxyLambdaFunctionQualifiedArn:
    Description: Current Lambda function version
    Value:
      Ref: OriginrequestproxyLambdaVersionJq6j21jiX73JeIv1dbWGCthq7jJbkrUHDnZNGgPeRs
  OriginrequestLambdaFunctionQualifiedArn:
    Description: Current Lambda function version
    Value:
      Ref: OriginrequestLambdaVersionlMi2ndzQrQw9kQcAyBj0pEjpgwrzOo7hyGg6bw20rg
  OriginresponseLambdaFunctionQualifiedArn:
    Description: Current Lambda function version
    Value:
      Ref: OriginresponseLambdaVersionlePMA92Qdw4fFE2Y72uIRweOkLz6SO04f16O0vnm14o
  GithubwebhookLambdaFunctionQualifiedArn:
    Description: Current Lambda function version
    Value:
      Ref: GithubwebhookLambdaVersionYZ7Rj0aBSWjrOxsf2dXVh4L5Z8vkOhHgRHZ98wkX9U
  ServiceEndpoint:
    Description: URL of the service endpoint
    Value:
      "Fn::Join":
        - ""
        - - "https://"
          - Ref: ApiGatewayRestApi
          - .execute-api.
          - Ref: "AWS::Region"
          - .
          - Ref: "AWS::URLSuffix"
          - /prod
  OriginRequestLambdaARN:
    Description: OriginRequest Lambda ARN
    Value:
      "Fn::GetAtt":
        - OriginrequestLambdaFunction
        - Arn
    Export:
      Name: stack-proxy-prod-originrequest-lambda-arn
  OriginRequestRoleARN:
    Description: OriginRequest Role ARN
    Value:
      "Fn::GetAtt":
        - OriginRequestRole
        - Arn
    Export:
      Name: stack-proxy-prod-originrequest-role-arn
  OriginRequestProxyRoleARN:
    Description: OriginRequestProxy Role ARN
    Value:
      "Fn::GetAtt":
        - OriginRequestProxyRole
        - Arn
    Export:
      Name: stack-proxy-prod-originrequestproxy-role-arn
  OriginResponseLambdaARN:
    Description: OriginResponse Lambda ARN
    Value:
      "Fn::GetAtt":
        - OriginresponseLambdaFunction
        - Arn
    Export:
      Name: stack-proxy-prod-originresponse-lambda-arn
  OriginMapTBL:
    Description: Proxy DynamoDB Origin Mapping Table
    Value:
      Ref: OriginMapTBL
    Export:
      Name: stack-proxy-prod-domainmap
  CloudfrontOAI:
    Description: Proxy CloudFront Origin Access Identity S3CanonicalUserId
    Value:
      "Fn::GetAtt":
        - CloudfrontOAI
        - S3CanonicalUserId
    Export:
      Name: stack-proxy-prod-cloudfrontoai
  CfProxyentryLambdaARN:
    Description: CFProxyEntry Lambda ARN
    Value:
      "Fn::GetAtt":
        - CfproxyentryLambdaFunction
        - Arn
    Export:
      Name: stack-proxy-prod-cfproxyentry-lambda-arn
  Domain:
    Description: Stack Proxy Apex Domain
    Value: dev.klickstack.com
